/*
 * RPS
 */
void rps_MoveToPositiveX(int percent, float x) {
    while((RPS.X() > 0) && (RPS.X() < x - 0.2 || RPS.X() > x + 0.2)) {
        if (RPS.X() < x) {
            moveForward_Time(percent, 0.1);
        } else if (RPS.X() > x) {
            moveBackward_Time(percent, 0.1);
        }
    }
}

void rps_MoveToNegativeX(int percent, float x) {
    while ((RPS.X() > 0) && (RPS.X() < x - 0.2 || RPS.X() > x + 0.2)) {
        if (RPS.X() > x) {
            moveForward_Time(percent, 0.1);
        } else if (RPS.X() < x) {
            moveBackward_Time(percent, 0.1);
        }
    }
}

void rps_MoveToPositiveY(int percent, float y) {
    while ((RPS.Y() > 0) && (RPS.Y() < y - 0.2 || RPS.Y() > y + 0.2)) {
        if (RPS.Y() < y) {
            moveForward_Time(percent, 0.1);
        } else if (RPS.Y() > y) {
            moveBackward_Time(percent, 0.1);
        }
    }
}

void rps_MoveToNegativeY(int percent, float y) {
    while ((RPS.Y() > 0) && (RPS.Y() < y - 0.2 || RPS.Y() > y + 0.2)) {
        if (RPS.Y() > y) {
            moveForward_Time(percent, 0.1);
        } else if (RPS.Y() < y) {
            moveBackward_Time(percent, 0.1);
        }
    }
}

void rps_checkHeading(float heading) {
    bool aligned = false;
    while (!aligned) {
        double headingActual = RPS.Heading();
        if (heading <= 1.0) {
            if (headingActual > 340) {
                headingActual -= 360.0;
            }
        }

        if (fabs(heading - headingActual) < 0.5) {
            aligned = true;
        } else {
            if (headingActual > heading) {
                // turn slightly to the left
                turnRight_Time(10, .02);
                Sleep(0.01);
            } else {
                // turn slightly to the right
                turnLeft_Time(10, .02);
                Sleep(0.01);
            }
        }
    }
}