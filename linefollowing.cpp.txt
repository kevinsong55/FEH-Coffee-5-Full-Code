/*
 * =============================================
 * LINE FOLLOWING
 * =============================================
 */
void line_FollowBackward() {
    Sleep(1.0);
    bool exit = false;
    float left;
    float middle;
    float right;
    while (!exit) {
        left = input_leftOpto.Value();
        middle = input_middleOpto.Value();
        right = input_rightOpto.Value();

        // Test to see if black has been passed
        if (left < OPTO_THRESHOLD && middle < OPTO_THRESHOLD && right < OPTO_THRESHOLD) {
            exit = true;
        }

        if (right > OPTO_THRESHOLD || (middle < OPTO_THRESHOLD && left < OPTO_THRESHOLD)) {
            motor_LeftWheel.SetPercent(-10);
            motor_RightWheel.SetPercent(-15);
            Sleep(.5);
        } else if (left > OPTO_THRESHOLD || (middle < OPTO_THRESHOLD && right < OPTO_THRESHOLD)) {
            motor_LeftWheel.SetPercent(-15);
            motor_RightWheel.SetPercent(-10);
            Sleep(.5);
        } else {
            motor_LeftWheel.SetPercent(-15);
            motor_RightWheel.SetPercent(-15);
            Sleep(.5);
        }

    }
}

void line_FollowForward() {
    bool exit = false;
    float left;
    float middle;
    float right;
    while (!exit) {
        left = input_leftOpto.Value();
        middle = input_middleOpto.Value();
        right = input_rightOpto.Value();

        // Test to see if black has been passed
        if (left < OPTO_THRESHOLD && middle < OPTO_THRESHOLD && right < OPTO_THRESHOLD) {
            exit = true;
        }

        if (right > OPTO_THRESHOLD || (middle < OPTO_THRESHOLD && left < OPTO_THRESHOLD)) {
            motor_LeftWheel.SetPercent(15);
            motor_RightWheel.SetPercent(10);
            Sleep(.5);
        } else if (left > OPTO_THRESHOLD || (middle < OPTO_THRESHOLD && right < OPTO_THRESHOLD)) {
            motor_LeftWheel.SetPercent(10);
            motor_RightWheel.SetPercent(15);
            Sleep(.5);
        } else {
            motor_LeftWheel.SetPercent(15);
            motor_RightWheel.SetPercent(15);
            Sleep(.5);
        }
    }
}

void line_Find() {
    bool found = false;
    float left;
    float middle;
    float right;
    while (!found) {
        left = input_leftOpto.Value();
        middle = input_middleOpto.Value();
        right = input_rightOpto.Value();
        motor_LeftWheel.SetPercent(20);
        motor_RightWheel.SetPercent(20);
        Sleep(.2);
        if (left > OPTO_THRESHOLD || middle > OPTO_THRESHOLD || right > OPTO_THRESHOLD) {
            found = true;
        }
    }
}